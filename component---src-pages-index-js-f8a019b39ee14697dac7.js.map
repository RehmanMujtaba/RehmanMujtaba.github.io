{"version":3,"file":"component---src-pages-index-js-f8a019b39ee14697dac7.js","mappings":"kMAWMA,G,8BCyBwBC,EAAAA,QAAAA,QAAAA,WAAH,wEAAGA,CAAH,0cAkBrB,qBAAGC,MAAkBC,OAAOC,SAA5B,IAaA,qBAAGF,MAAkBC,OAAOE,MAA5B,IAKgBJ,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,guCAoBb,qBAAGC,MAAkBC,OAAOG,SAA5B,IACA,qBAAGJ,MAAkBC,OAAOI,WAA5B,IAaA,qBAAGL,MAAkBC,OAAOI,WAA5B,IAkBI,qBAAGL,MAAkBC,OAAOK,UAA5B,IA6CF,qBAAGN,MAAkBC,OAAOM,UAA5B,ID9JoBR,EAAAA,QAAAA,KAAAA,WAAH,sEAAGA,CAAH,6BAqBzB,EAjBkB,SAAC,GAAD,IAAGS,EAAH,EAAGA,SAAH,OAChB,gBAAC,KAAD,CAAQA,SAAUA,GAChB,gBAACV,EAAD,CAAqBW,UAAU,cAC7B,gBAAC,KAAD,MACA,gBAAC,KAAD,MACA,gBAAC,KAAD,MAGA,gBAAC,KAAD,OARY,C","sources":["webpack://mustaquenadim/./src/pages/index.js","webpack://mustaquenadim/./src/components/sections/blogs.js"],"sourcesContent":["import { About, Contact, Featured, Hero, Jobs, Layout } from '@components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Blogs from '../components/sections/blogs';\n\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport 'swiper/css/scrollbar';\n\nconst StyledMainContainer = styled.main`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero />\n      <About />\n      <Jobs />\n      {/* <Featured /> */}\n      {/* <Projects /> */}\n      <Contact />\n    </StyledMainContainer>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n","import { Icon } from '@components/icons';\nimport { srConfig } from '@config';\nimport { usePrefersReducedMotion } from '@hooks';\nimport sr from '@utils/sr';\n// import { graphql, Link, useStaticQuery } from 'gatsby';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled from 'styled-components';\n\nconst blogs = [\n  {\n    title: 'The Ultimate Guide to Mastering Any Programming Language!',\n    description:\n      'Learning a new programming language is a challenging, but incredibly rewarding, experience. It requires dedication, hard work, willingness to learn, and make mistakes.',\n    tech: ['Learn to Code', 'Programming Tips', 'Beginners Guide', 'Programming Language'],\n    external:\n      'https://medium.com/@mustaquenadim/the-ultimate-guide-to-mastering-any-programming-language-5293d57cc169',\n  },\n  {\n    title: 'Maximize Your Productivity with These Essential JavaScript Array Techniques',\n    description:\n      'Learn essential techniques for working with JavaScript arrays that will help you maximize your productivity.',\n    tech: ['JavaScript', 'Beginners Guide', 'Array Methods'],\n    external:\n      'https://medium.com/@mustaquenadim/maximize-your-productivity-with-these-essential-javascript-array-techniques-f1a211bef347',\n  },\n  {\n    title: 'JavaScript Strings 101: The Complete Beginnerâ€™s Guide',\n    description:\n      'Learn JavaScript string methods like charAt, concat, indexOf, lastIndexOf, slice and split in this beginner\\'s guide.',\n    tech: ['JavaScript', 'Beginners Guide', 'String Methods'],\n    external:\n      'https://medium.com/@mustaquenadim/javascript-strings-101-the-complete-beginners-guide-c5505823855d',\n  },\n];\n\nconst StyledProjectsSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h2 {\n    font-size: clamp(24px, 5vw, var(--fz-heading));\n  }\n\n  .archive-link {\n    font-family: var(--font-mono);\n    font-size: var(--fz-sm);\n    &:after {\n      bottom: 0.1em;\n    }\n  }\n\n  .projects-grid {\n    ${({ theme }) => theme.mixins.resetList};\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-gap: 15px;\n    position: relative;\n    margin-top: 50px;\n\n    @media (max-width: 1080px) {\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n  }\n\n  .more-button {\n    ${({ theme }) => theme.mixins.button};\n    margin: 80px auto 0;\n  }\n`;\n\nconst StyledProject = styled.li`\n  position: relative;\n  cursor: default;\n  transition: var(--transition);\n\n  @media (prefers-reduced-motion: no-preference) {\n    &:hover,\n    &:focus-within {\n      .project-inner {\n        transform: translateY(-7px);\n      }\n    }\n  }\n\n  a {\n    position: relative;\n    z-index: 1;\n  }\n\n  .project-inner {\n    ${({ theme }) => theme.mixins.boxShadow};\n    ${({ theme }) => theme.mixins.flexBetween};\n    flex-direction: column;\n    align-items: flex-start;\n    position: relative;\n    height: 100%;\n    padding: 2rem 1.75rem;\n    border-radius: var(--border-radius);\n    background-color: var(--light-navy);\n    transition: var(--transition);\n    overflow: auto;\n  }\n\n  .project-top {\n    ${({ theme }) => theme.mixins.flexBetween};\n    margin-bottom: 35px;\n\n    .folder {\n      color: var(--green);\n      svg {\n        width: 48px;\n        height: 48px;\n      }\n    }\n\n    .project-links {\n      display: flex;\n      align-items: center;\n      margin-right: -10px;\n      color: var(--light-slate);\n\n      a {\n        ${({ theme }) => theme.mixins.flexCenter};\n        padding: 5px 7px;\n\n        &.external {\n          svg {\n            width: 22px;\n            height: 22px;\n            margin-top: -4px;\n          }\n        }\n\n        svg {\n          width: 20px;\n          height: 20px;\n        }\n      }\n    }\n  }\n\n  .project-title {\n    margin: 0 0 10px;\n    color: var(--lightest-slate);\n    font-size: var(--fz-xxl);\n\n    a {\n      position: static;\n\n      &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        z-index: 0;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n\n  .project-description {\n    color: var(--light-slate);\n    font-size: 17px;\n\n    a {\n      ${({ theme }) => theme.mixins.inlineLink};\n    }\n  }\n\n  .project-tech-list {\n    display: flex;\n    align-items: flex-end;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    padding: 0;\n    margin: 20px 0 0 0;\n    list-style: none;\n\n    li {\n      font-family: var(--font-mono);\n      font-size: var(--fz-xxs);\n      line-height: 1.75;\n\n      &:not(:last-of-type) {\n        margin-right: 15px;\n      }\n    }\n  }\n`;\n\nconst Blogs = () => {\n  // const data = useStaticQuery(graphql`\n  //   query {\n  //     projects: allMarkdownRemark(\n  //       filter: {\n  //         fileAbsolutePath: { regex: \"/content/projects/\" }\n  //         frontmatter: { showInProjects: { ne: false } }\n  //       }\n  //       sort: { fields: [frontmatter___date], order: DESC }\n  //     ) {\n  //       edges {\n  //         node {\n  //           frontmatter {\n  //             title\n  //             tech\n  //             github\n  //             external\n  //           }\n  //           html\n  //         }\n  //       }\n  //     }\n  //   }\n  // `);\n\n  const [showMore, setShowMore] = useState(false);\n  const revealTitle = useRef(null);\n  const revealArchiveLink = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealArchiveLink.current, srConfig());\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\n  }, []);\n\n  const GRID_LIMIT = 6;\n  // const projects = data.projects.edges.filter(({ node }) => node);\n  const firstSix = blogs.slice(0, GRID_LIMIT);\n  const publishedBlogs = showMore ? blogs : firstSix;\n\n  const projectInner = node => {\n    // const { frontmatter, html } = node;\n    // const { github, external, title, tech } = frontmatter;\n    const { title, description, tech, external } = node;\n\n    return (\n      <div className=\"project-inner\">\n        <header>\n          <div className=\"project-top\">\n            <div className=\"folder\">\n              <Icon name=\"Article\" />\n            </div>\n            <div className=\"project-links\">\n              {external && (\n                <a\n                  href={external}\n                  aria-label=\"External Link\"\n                  className=\"external\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <Icon name=\"External\" />\n                </a>\n              )}\n            </div>\n          </div>\n\n          <h3 className=\"project-title\">\n            <a href={external} target=\"_blank\" rel=\"noreferrer\">\n              {title}\n            </a>\n          </h3>\n\n          <div className=\"project-description\" dangerouslySetInnerHTML={{ __html: description }} />\n        </header>\n\n        <footer>\n          {tech && (\n            <ul className=\"project-tech-list\">\n              {tech.map((tech, i) => (\n                <li key={i}>{tech}</li>\n              ))}\n            </ul>\n          )}\n        </footer>\n      </div>\n    );\n  };\n\n  return (\n    <StyledProjectsSection id=\"blogs\">\n      <h2 className=\"numbered-heading\" ref={revealTitle}>\n        Recently Published Blogs\n      </h2>\n\n      {/* <Link className=\"inline-link archive-link\" to=\"/archive\" ref={revealArchiveLink}>\n        view the archive\n      </Link> */}\n\n      <ul className=\"projects-grid\">\n        {prefersReducedMotion ? (\n          <>\n            {publishedBlogs &&\n              publishedBlogs.map((node, i) => (\n                <StyledProject key={i}>{projectInner(node)}</StyledProject>\n              ))}\n          </>\n        ) : (\n          <TransitionGroup component={null}>\n            {publishedBlogs &&\n              publishedBlogs.map((node, i) => (\n                <CSSTransition\n                  key={i}\n                  classNames=\"fadeup\"\n                  timeout={i >= GRID_LIMIT ? (i - GRID_LIMIT) * 300 : 300}\n                  exit={false}\n                >\n                  <StyledProject\n                    key={i}\n                    ref={el => (revealProjects.current[i] = el)}\n                    style={{\n                      transitionDelay: `${i >= GRID_LIMIT ? (i - GRID_LIMIT) * 100 : 0}ms`,\n                    }}\n                  >\n                    {projectInner(node)}\n                  </StyledProject>\n                </CSSTransition>\n              ))}\n          </TransitionGroup>\n        )}\n      </ul>\n\n      <button className=\"more-button\" onClick={() => setShowMore(!showMore)}>\n        Show {showMore ? 'Less' : 'More'}\n      </button>\n    </StyledProjectsSection>\n  );\n};\n\nexport default Blogs;\n"],"names":["StyledMainContainer","styled","theme","mixins","resetList","button","boxShadow","flexBetween","flexCenter","inlineLink","location","className"],"sourceRoot":""}